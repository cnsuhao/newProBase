	基于C++编程规范, 对于cocos2dx客户端开发的补充规定


1. 不得使用windows类型, 比如UINT, DWORD, 只能使用c++自建类型或cocos2d中的标准整数类型, 比如uint32_t等, 在stdint.h文件中
2. 空指针不得使用NULL指针表示, 只能使用nullptr关键字
3. 成员函数以小写字母开头(建议, 不强制), 驼峰命名(强制)
4. 类命名不需要以C开头(建议, 不强制)
5. 单例类统一使用getInstance与destroyInstance作为单例获取与销毁接口
6. 客户端分为数据/控制/显示三个大层次, 数据为(静态/持久化/逻辑数据/音频数据/网络数据), 控制为(控制器下各类或场景类中逻辑), 显示为场景中各层各精灵的组合
7. 强制要求控制类中只能写静态函数, 层与精灵不保存任何逻辑层数据, 以便实现相对隔离的分层机制
8. 如非必要禁止开线程, 目前只有网络的数据包收发单独开放线程, 如需要开线程只允许使用std::thread进行多线程开发
9. 由于OpenGL中要求纹理必须在同一个线程中, 故所有精灵是不支持异步加载的, 只有资源可以异步加载
10.头文件包含如果是同一级的可以直接写为#include "filename.h", 如果是不同级的要写为相对于Classes目录的, 比如#include "Global/Global.h"
11.如果容器内需要管理继承于Ref的子类指针, 强制使用引擎封装的cocos2d::Vector, cocos2d::Map等, 避免内存泄露. 管理非Ref子类的容器则不受限制
12.更新ui工程前, 需要关闭CocosStudio, 提交前务必检查ccs文件是否更新合并成功